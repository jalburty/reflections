How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
I might not be so hesitant about making changes to and trying out new versions of a file.
I might see the progression of my code from basic to advanced more clearly.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
Manual commits, once mastered, allow each commit to be well defined and easily understood by others.


Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Sometimes it make sense to track multiple files, like in a project or paper that have related files.

How might using version control make you more confident to make changes that could break something?
Can always go back. And keeping commits to a manageable size reduces risk of rework.

Now that you have your workspace set up, what do you want to try using Git for?
To see changes to files and test that the asterisk appears when changes need to be committed.